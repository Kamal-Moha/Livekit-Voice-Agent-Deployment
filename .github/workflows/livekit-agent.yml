name: Deploy LiveKit Agent to GCE Github Workflow

on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write # Required for Workload Identity Federation

env:
  GCP_VM_NAME: myride-wallet-voice-ubuntu
  GCP_ZONE: us-east1-d 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code üó≥Ô∏è
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud üîí‚òÅÔ∏è
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}

      - name: Setup gcloud SDK ü™õ‚öôÔ∏è
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Disable gcloud prompts
        run: gcloud config set core/disable_prompts true

      - name: Zip source code (exclude .git) ü§ê
        run: |
          zip -r livekit-agent.zip . -x ".git/*"

      - name: Upload ZIP to VM ‚¨ÜÔ∏è‚òÅÔ∏èüñ•Ô∏è
        run: |
          # CHANGE: Using 'gcloud beta' to support WIF for SSH/SCP.
          gcloud beta compute scp livekit-agent.zip bhadala_kamalmohapy@${{ env.GCP_VM_NAME }}:~ \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --zone=${{ env.GCP_ZONE }}

      - name: Prepare and deploy on VM üöÄüñ•Ô∏è
        run: |
          # CHANGE: Using 'gcloud beta' here as well.
          gcloud beta compute ssh bhadala_kamalmohapy@${{ env.GCP_VM_NAME }} \
              --project=${{ secrets.GCP_PROJECT_ID }} \
              --zone=${{ env.GCP_ZONE }} \
              --command='
                set -e
                echo "Ensuring unzip is installed..."
                sudo apt-get update && sudo apt-get install -y unzip
                echo "Cleaning previous deployment..."
                rm -rf ~/livekit-agent
                mkdir ~/livekit-agent
                echo "Unzipping..."
                unzip -o ~/livekit-agent.zip -d ~/livekit-agent

                # ‚¨áÔ∏è Fetch secrets from Google Secrets Manager ‚¨áÔ∏è
                echo "Fetching secrets from Secrets Manager..."
                LIVEKIT_API_KEY=$(gcloud secrets versions access 1 --secret="LIVEKIT_API_KEY")
                LIVEKIT_API_SECRET=$(gcloud secrets versions access 1 --secret="LIVEKIT_API_SECRET")
                LIVEKIT_API_URL=$(gcloud secrets versions access 1 --secret="LIVEKIT_URL")
                GOOGLE_API_KEY=$(gcloud secrets versions access 1 --secret="GOOGLE_API_KEY")
                
                echo "Building Docker image..."
                cd ~/livekit-agent 
                sudo docker build -t livekit-agent .
                echo "Restarting container..."
                sudo docker stop livekit-agent || true
                sudo docker rm livekit-agent || true
                sudo docker run \
                  --memory="12gb" \
                  --cpus="14.0" \
                  -d \
                  --restart=always \
                  -e LIVEKIT_API_KEY="$LIVEKIT_API_KEY" \
                  -e LIVEKIT_API_SECRET="$LIVEKIT_API_SECRET" \
                  -e LIVEKIT_URL="$LIVEKIT_URL" \
                  -e GOOGLE_API_KEY="$GOOGLE_API_KEY" \
                  --name livekit-agent livekit-agent
                echo "Cleaning up unused images..."
                sudo docker image prune -f || true
              '
